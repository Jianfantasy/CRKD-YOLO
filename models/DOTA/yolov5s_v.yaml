# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 15  # number of classes  coco数据集的类别数
depth_multiple: 0.33  # model depth multiple   BottleneckCSP模块的层缩放因子   把BottleneckCSP的Bottleneck乘上这个参数得到最终个数     控制模型深度
width_multiple: 0.50  # layer channel multiple 控制模型宽度及conv通道个数（卷积核数量？）
anchors:
  - [10,13, 16,30, 33,23]  # P3/8  框 宽度10 高度13   这里的8是8倍下采样  8倍下采样后anchors的大小
  - [30,61, 62,45, 59,119]  # P4/16                                  16...
  - [116,90, 156,198, 373,326]  # P5/32                              32...

l1: 4   #对第l1和l2层超分？
l2: 8
c1: 128
c2: 512


# YOLOv5 v6.0 backbone
backbone:
  #  from：当前模块输入来自那一层的输出；-1 代表从上一层获得的输出
  #  number：本模块重复次数；1表示一个，3表示有三个相同模块
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 3, 1]],  # 0-P1/2   #Focus模块
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4     #Conv         #128表示128个卷积核，3表示3×3的卷积核，2表示步长
   [-1, 3, C3, [128]],                       #BottleneckCSP模块  重复3次   BottleneckCSP模块的Bottleneck是3  乘上depth_multiple的到最终的深度
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 6, C3, [256]],                       #BottleneckCSP模块  重复6次
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],                       #BottleneckCSP模块  重复9次
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3, [1024]],                      #BottleneckCSP模块  重复3次
   [-1, 1, SPPF, [1024, 5]],  # 9            #SPPF模块  重复3次
  ]

# YOLOv5 v6.0 head  闹含量PANet+Detect部分
head:
  [[-1, 1, Conv, [512, 1, 1]],                     #卷积层
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],     #上采样层
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4   #拼接
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 14], 1, Concat, [1]],  # cat head P4
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 10], 1, Concat, [1]],  # cat head P5
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large)

   [[17,20,23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
