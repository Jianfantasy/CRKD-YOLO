# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 5  # number of classes  coco数据集的类别数
depth_multiple: 0.33  # model depth multiple   BottleneckCSP模块的层缩放因子   把BottleneckCSP的Bottleneck乘上这个参数得到最终个数     控制模型深度
width_multiple: 0.50  # layer channel multiple 控制模型宽度及conv通道个数（卷积核数量？）
anchors:
  - [10,13, 16,30, 33,23]  # P3/8  框 宽度10 高度13   这里的8是8倍下采样  8倍下采样后anchors的大小
  - [30,61, 62,45, 59,119]  # P4/16                                  16...
  - [116,90, 156,198, 373,326]  # P5/32                              32...

# YOLOv5 v6.0 backbone
backbone:
  #  from：当前模块输入来自那一层的输出；-1 代表从上一层获得的输出
  #  number：本模块重复次数；1表示一个，3表示有三个相同模块
  # [from, number, module, args]                                                                                        1024
  [[-1, 1, Conv, [32, 3, 2]],
   [-1, 1, Conv, [64, 3, 1]],  # 0-P1/2   #Focus模块                                                                  512
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4     #Conv         #128表示128个卷积核，3表示3×3的卷积核，2表示步长                    256
   [-1, 3, C3, [128]],                       #BottleneckCSP模块  重复3次   BottleneckCSP模块的Bottleneck是3  乘上depth_multiple的到最终的深度   256
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8    128
   [-1, 6, C3, [256]],                       #BottleneckCSP模块  重复6次    128
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16    64
   [-1, 9, C3, [512]],                       #BottleneckCSP模块  重复9次  64
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32   32
   [-1, 3, C3, [1024]],                      #BottleneckCSP模块  重复3次 n 32
   [-1, 1, SPPF, [1024, 5]],  # 9            #SPPF模块  重复3次  32
  ]

# YOLOv5 v6.0 head  闹含量PANet+Detect部分
head:
  [[-1, 1, Conv, [512, 1, 1]],                     #卷积层  32         10  256
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],     #上采样层  64
   [[-1, 7], 1, Concat, [1]],  # cat backbone P4   #拼接   64
   [-1, 3, C3, [512, False]],  # 13   64

   [-1, 1, Conv, [256, 1, 1]],    # 64                         14
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],   #128          15
   [[-1, 5], 1, Concat, [1]],  # cat backbone P3  128
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)  128     17
#以上是FPN，以下是改进
   [11, 1, sub_pixl_upsample, [256,4]],  #18   (1, 256, 8, 8) --(1, 16, 32, 32) --(1, 256, 32, 32)
   [15, 1, sub_pixl_upsample, [256,2]],  #18   (1, 128, 16, 16) --(1, 32, 32, 32) --(1, 256, 32, 32)
   [[18, 19, 20], 1, Concat, [1]],                      #128+128+128   C3和这里的卷积核大小都是1*1挺小的         21

   [-1, 1, Conv, [256, 1, 1]],                    #这两行可删除 128
   [[-1, 5], 1, Concat, [1]],   #再一次融合底层特征    #这两行可删除                      23   256+256
   [-1, 3, C3, [256, False]],   #24

   [-1, 1, Conv, [256, 3,2]],
   [[-1, 7], 1, Concat, [1]],                            
   [-1, 3, C3, [256, False]],   #27

   [-1, 1, Conv, [256, 3,2]],
   [[-1, 9], 1, Concat, [1]],
   [-1, 3, C3, [256, False]],   #31

   [[24, 27, 30], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)  128   64   32
  ]

